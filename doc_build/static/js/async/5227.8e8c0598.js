"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["5227"],{455:function(e,n,r){r.r(n),r.d(n,{default:()=>l});var a=r(6773),s=r(453);function i(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",pre:"pre",code:"code",h2:"h2",p:"p",blockquote:"blockquote"},(0,s.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"electron",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#electron",children:"#"}),"electron"]}),"\n",(0,a.jsxs)(n.h1,{id:"prequites",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#prequites",children:"#"}),"prequites"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"nodemon\nnodemon 是一个监控文件变化的工具，当文件变化时，自动重启应用"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-nodemon.json",children:'{\n  "watch": ["src"],\n  "ext": "js,jsx,json",\n  "ignore": ["node_modules/**", "dist/**"]\n}\n'})}),"\n",(0,a.jsxs)(n.h1,{id:"安装",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#安装",children:"#"}),"安装"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add electron\n"})}),"\n",(0,a.jsxs)(n.h1,{id:"运行",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#运行",children:"#"}),"运行"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn dev\n"})}),"\n",(0,a.jsxs)(n.h1,{id:"main",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#main",children:"#"}),"main"]}),"\n",(0,a.jsxs)(n.h1,{id:"renderer",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#renderer",children:"#"}),"renderer"]}),"\n",(0,a.jsxs)(n.h1,{id:"preload",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#preload",children:"#"}),"preload"]}),"\n",(0,a.jsxs)(n.h1,{id:"debug",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#debug",children:"#"}),"debug"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-launch.json",children:'  {\n      "version": "0.2.0",\n      "configurations": [\n          {\n              "type": "node",\n              "request": "launch",\n              "name": "Electron: Main",\n              "runtimeExecutable": "${workspaceFolder}/node_modules/.bin/electron",\n              "runtimeArgs": [\n                  "--remote-debugging-port=9223",\n                  "."\n              ],\n              "windows": {\n                  "runtimeExecutable": "${workspaceFolder}/node_modules/.bin/electron.cmd"\n              }\n          },\n          {\n              "name": "Electron: Renderer",\n              "type": "chrome",\n              "request": "attach",\n              "port": 9223,\n              "webRoot": "${workspaceFolder}",\n              "timeout": 30000\n          }\n      ],\n      "compounds": [\n          {\n              "name": "Electron: All",\n              "configurations": [\n                  "Electron: Main",\n                  "Electron: Renderer"\n              ]\n          }\n      ]\n  }  \n'})}),"\n",(0,a.jsxs)(n.h1,{id:"通信",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#通信",children:"#"}),"通信"]}),"\n",(0,a.jsxs)(n.h2,{id:"preload-和-renderer-通信",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#preload-和-renderer-通信",children:"#"}),"preload 和 renderer 通信"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-main.js",children:"const { ipcMain } = require('electron')\n\nipcMain.on('message', (event, arg) => {\n  console.log(arg)\n})\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-preload.js",children:"const { ipcRenderer } = require('electron')\n\nipcRenderer.on('message', (event, arg) => {\n  console.log(arg)\n})\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"main-和-renderer-通信",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#main-和-renderer-通信",children:"#"}),"main 和 renderer 通信"]}),"\n",(0,a.jsx)(n.p,{children:"通过preload.js 暴露给renderer 通信"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-main.js",children:"ipcMain.on('message', (event, arg) => {\n  console.log('sdojfisja_________________',arg); // main prints \"ping\"\n})\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-preload.js",children:"\nconst { contextBridge, ipcRenderer } = require('electron')\n\ncontextBridge.exposeInMainWorld(\"a\", {\n    baby:\"justin biber\",\n    babyfun:()=>{\n        ipcRenderer.send('message', 'ping');\n    }\n})\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-renderer.js",children:"window.addEventListener('DOMContentLoaded', () => {\n    const babybtn = document.querySelector('#btn');\n    babybtn.addEventListener('click', () => {\n        window.a.babyfun();\n    })\n\n})\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"menu-菜单-主进程向渲染进程发送消息",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#menu-菜单-主进程向渲染进程发送消息",children:"#"}),"menu 菜单 主进程向渲染进程发送消息"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-main.js",children:"const { Menu, BrowserWindow } = require('electron')\n\nconst createMenu = (win) => {\n    const menu = [\n        {\n            label: 'File',\n            submenu: [\n                {\n                    label: 'New',\n                    accelerator: 'CmdOrCtrl+N',\n                    click: () => {\n                        console.log('New File', win.webContents)\n                    }\n                },\n            ]\n        }\n    ]\n    Menu.setApplicationMenu(Menu.buildFromTemplate(menu))\n}\nconst createWindow = () => {\n    const mainWindow = new BrowserWindow({})\n    ...\n\n    createMenu(mainWindow)\n}\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"可以把menu module 抽离出来，方便管理"}),"\n"]}),"\n",(0,a.jsxs)(n.h2,{id:"主进程向preload-发送消息",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#主进程向preload-发送消息",children:"#"}),"主进程向preload 发送消息"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-main.js",children:"    '''\n    submenu: [\n                    {\n                        label: 'New',\n                        accelerator: 'CmdOrCtrl+N',\n                        click: () => {\n                            win.webContents.send('test')\n                        }\n                    },\n                ]\n    '''\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-preload.js",children:"ipcRenderer.on('test', () => {\n    console.log('test')\n})\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"invoke-通信",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#invoke-通信",children:"#"}),"invoke 通信"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-main.js",children:"const { dialog } = require('electron')\n'''      \nipcMain.on('saveFile', (event, arg) => {\n  BrowserWindow.fromWebContents(event.sender).send('saveFile', arg);\n  console.log('saveFile', arg);\n}\n);\nipcMain.handle('selectFolder', async (event) => {\n  const {filePaths} = await dialog.showOpenDialog({})\n  console.log(filePaths); \n  return filePaths;\n})\n\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-preload.js",children:"const { contextBridge, ipcRenderer} = require(\"electron\");\n\ncontextBridge.exposeInMainWorld(\"a\", {\n    baby: \"justin biber\",\n    babyfun: () => {\n        ipcRenderer.send('message', 'ping');\n    },\n    upload: async (filePath) => {\n        const file = await ipcRenderer.invoke('selectFolder', filePath);\n        console.log(file);\n        document.querySelector('input').value = file;\n    }\n})\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"electron-vite",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#electron-vite",children:"#"}),"electron-vite"]}),"\n",(0,a.jsx)(n.p,{children:"安装 tailwindcss import"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add tailwindcss @tailwindcss/postcss postcss autoprefixer\n"})}),"\n",(0,a.jsxs)(n.p,{children:["(notworing)[",(0,a.jsx)(n.a,{href:"https://github.com/tailwindlabs/tailwindcss/discussions/16250",rel:"noopener noreferrer",target:"_blank",children:"https://github.com/tailwindlabs/tailwindcss/discussions/16250"}),"]"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsconfig.json",children:'{\n    "compilerOptions": {\n    "moduleResolution": "bundler"\n    }\n}\n'})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(i,e)})):i(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["guides%2Finstall%2Felectron.mdx"]={toc:[{id:"preload-和-renderer-通信",text:"preload 和 renderer 通信",depth:2},{id:"main-和-renderer-通信",text:"main 和 renderer 通信",depth:2},{id:"menu-菜单-主进程向渲染进程发送消息",text:"menu 菜单 主进程向渲染进程发送消息",depth:2},{id:"主进程向preload-发送消息",text:"主进程向preload 发送消息",depth:2},{id:"invoke-通信",text:"invoke 通信",depth:2},{id:"electron-vite",text:"electron-vite",depth:2}],title:"electron",headingTitle:"electron",frontmatter:{}}}}]);