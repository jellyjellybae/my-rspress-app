[{"id":0,"title":"mini-react","content":"#\n\n\n\n\nvdom js object#\n\ntype props children\n\n\n\n\n修改抽离一小部分#\n\n\n\n\n动态创建DOM#\n\n\n\n\n创建render函数#\n\n\n\n * 优化\n\n","routePath":"/my-rspress-app/article/article","lang":"","toc":[{"text":"vdom js object","id":"vdom-js-object","depth":3,"charIndex":5},{"text":"修改抽离一小部分","id":"修改抽离一小部分","depth":3,"charIndex":46},{"text":"动态创建DOM","id":"动态创建dom","depth":3,"charIndex":60},{"text":"创建render函数","id":"创建render函数","depth":3,"charIndex":73}],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"","content":"","routePath":"/my-rspress-app/components/MyComponent","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"","content":"","routePath":"/my-rspress-app/components/my","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"","content":"","routePath":"/my-rspress-app/components/process","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":4,"title":"命令打开 VSCode 设置","content":"#\n\n终端尝试使用命令打开 VSCode 在终端用git命令打开VS code时 会出现 command not found 的情况 这时候需要打开VSCode\nVSCode文档提到，在VSCode执行shell command\n\n\n\n按下 ⌘+ shift + P 输入shell code 此时再输入 code .就可以顺利打开","routePath":"/my-rspress-app/guides/basic/","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"通过home brew安装MongoDB","content":"#\n\n1.打开官网 前提是已经安装了home brew 打开终端 对照官网的内容遵循指令安装 1.安装相关工具\n\n\n\n2.更新brew\n\n\n\n3.安装community\n\n\n\n可以通过mongod --version 查看版本号码\n\n\n\n4.开启关闭服务\n\n\n\n5.查看端口 这时用的指令是\n\n\n\n以往是mongo\n\n回车后会显示默认端口的内容 关闭服务\n\n\n\n关闭后链接就失效了connect ECONNREFUSED\n\n\n\n6.强制关闭\n\n\n\n7.修改端口 比如我们修改为 27020 此语句的详细可查看官网 config 的位置如果电脑是M1 chip就是\n\n\n\n\n\n想要查看这个端口的相关内容不要用 mongosh 要用\n\n","routePath":"/my-rspress-app/guides/basic/introduction","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"node-版本管理","content":"#\n\n今天折腾了一下node版本管理。 使用nvm进行版本管理,但是在实行命令的过程中出现了很多错误。\n\n\n\n在nvm github上找到的命令\n\n\n\n\n\n这条语句同时会把之前安装过的版本也移植到nvm,但是个人还是重新用nvm装了之前的版本","routePath":"/my-rspress-app/guides/basic/nvm","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"相关文档","content":"使用 FFmpeg 合并 音频与视频#\n\n使用 哔哩哔哩下载助手 下载一些视频时发现想要更高清的只有单独的音频/视频\n\n懒得使用视频格式的软件\n\n于是便使用了 FFmpeg\n\n\n下载 FFmpeg#\n\n根据自己的系统下载 FFmpeg\n\n下载完成后解压此 zip\n\n然后将其移动到本机的环境变量路径所在文件夹里面，这样就能在任何位置使用 FFmpeg 命令了.\n\n打开终端，查看 FFmpeg 版本\n\n\n\n\n\n\n合并音频与视频#\n\n现在 我们有一个 音频 audio.m4s 和一个 纯视频 video.m4s 在所在位置打开终端，输入合并 为视频的命令.\n\n\n\n出现 这一行表示合并完成✅\n\n\n\n\n\n\n相关文档#\n\n更多 FFmpeg 使用方法请看 电子书FFmpeg 教程","routePath":"/my-rspress-app/guides/install/","lang":"","toc":[{"text":"使用 FFmpeg 合并 音频与视频","id":"使用-ffmpeg-合并-音频与视频","depth":2,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"","content":"NOTE\n\n这是一个 note 类型的 block\n\n\n防抖截流#\n\n\n防抖#\n\n\n\n\n\n\n截流#\n\n\n\n\n区别#\n\n维度       防抖(DEBOUNCE)   节流(THROTTLE)\n核心目标     确保最终状态稳定后执行    确保固定间隔内最多执行一次\n高频触发结果   只执行最后一次        按固定节奏执行\n代码重点     清除定时器 + 重新计时   时间戳对比 + 固定间隔\n适用场景     结果导向（如搜索建议）    过程控制（如滚动加载）","routePath":"/my-rspress-app/guides/interview/interview","lang":"","toc":[{"text":"防抖截流","id":"防抖截流","depth":2,"charIndex":27},{"text":"防抖","id":"防抖","depth":3,"charIndex":35},{"text":"截流","id":"截流","depth":3,"charIndex":45},{"text":"区别","id":"区别","depth":3,"charIndex":53}],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"i nsat;;;;;;;","content":"#","routePath":"/my-rspress-app/guides/introduction/","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"jfhsliahfiuhedi","content":"serhgtsdrtfd\n\nNOTE\n\n这是一个 note 类型的 block\n\n\njfhsliahfiuhedi#\n\njks.adjfj","routePath":"/my-rspress-app/guides/introduction/test","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":11,"title":"快捷键","content":"#\n\n\nvim#\n\nea 在单词后插入\n\nc：删除并进入 insert 模式 ch/dh 删除当前光标前一个字符\n\ncj/dj 删除当前光标所在行和下一行(一下子删两行)\n\n * d g _：删除到行尾\n\n * D\n\n * d e：删除到单词尾\n\n * d b：\n\n * e a：在当前单词后插入\n\n * bi 在单词前插入\n\n * d w：删除到下个单词前（\n\n * c w 功能相同，但会保留下个单词前的空格）\n\nxs :->del\n\n * x：删除当前光标所在字符\n * X：删除当前光标所在字符的前一个字符\n * s：删除当前光标所在字符并进入 insert mode\n * S：删除当前光标所在行的除缩进外的所有内容并进入 insert modec\n * 删掉除空格以外的这一行////dd\n * u: vim 中的 ctrl z\n * ctrl + r：重做 ctrl shift z\n\n\nvisual mode#\n\nv模式 V:选中这一行 o:移动光标移动很方便 选中再操 hihi","routePath":"/my-rspress-app/guides/shortcuts/","lang":"","toc":[{"text":"vim","id":"vim","depth":2,"charIndex":3},{"text":"visual mode","id":"visual-mode","depth":3,"charIndex":400}],"domain":"","frontmatter":{},"version":""},{"id":12,"title":"无需鼠标拖拽窗口","content":"#\n\n这个技巧非常好用，建议所有人开一下，在终端中输入： defaults write -g NSWindowShouldDragOnGesture YES ，\n然后回车，之后新打开的应用窗口，按住 Control+Command 键，即可在任意位置使用鼠标拖拽窗口，不用拖窗口顶部了, 但是不不适用于 finder\n之类的，总之配合 三指拖动 非常好用。","routePath":"/my-rspress-app/guides/tricks","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":14,"title":"main","content":"#","routePath":"/my-rspress-app/main","lang":"","toc":[],"domain":"","frontmatter":{},"version":""}]